name: helm-upgrade
run-name: ${{ github.actor }} - ${{ github.ref_name }}

on:
  workflow_call:
    inputs:
      environment:
        required: true
        description: 'Environment to deploy to'
        type: string
      version:
        required: true
        type: string
      helm-values-path:
        type: string
        default: './todoapp/values.yaml'
      helm-release-name:
        default: todoapp
        type: string
env:
  DockerImageName: ${{ secrets.DOCKERHUB_USERNAME }}/todoapp
jobs:
    deploy-helm:
      name: ${{ inputs.environment }}
      runs-on: ubuntu-latest
      environment: ${{ inputs.environment }}

      steps:
      - uses: actions/download-artifact@v4
        with:
          name: helm-package
          path: .

      - uses: actions/download-artifact@v4
        with:
          name: helm-artifacts-3.8-ubuntu-latest
          path: .

      - uses: actions/download-artifact@v4
        with:
          name: kind-cluster-3.8-ubuntu-latest
          path: .

      - name: Set Up Helm
        uses: azure/setup-helm@v4.3.0

      - name: Set up Kubectl
        uses: azure/setup-kubectl@v4

      - uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Create k8s Kind Cluster
        uses: helm/kind-action@v1
        with:
          config: ./cluster.yml

      - name: Verify Image Availability
        run: |
          IMAGE="${{ env.DockerImageName }}:${{ inputs.version }}"
          echo "Checking image: $IMAGE"
          if docker image inspect $IMAGE >/dev/null 2>&1; then
            echo "✅ Image exists locally"
          else
            echo "⚠️ Image not found locally, trying to pull..."
            docker pull $IMAGE || {
              echo "❌ Failed to pull image $IMAGE"
            exit 1
          }
          echo "✅ Successfully pulled image"
          fi

      - name: Dry Run Helm
        run: |
          helm install --dry-run ${{ inputs.helm-release-name }} ./todoapp-*.tgz  \
          -f ${{ inputs.helm-values-path }} \
          --set mysql.secrets.MYSQL_ROOT_PASSWORD="${{ secrets.MYSQL_ROOT_PASSWORD }}" \
          --set mysql.secrets.MYSQL_USER="${{ secrets.MYSQL_USER }}" \
          --set mysql.secrets.MYSQL_PASSWORD="${{ secrets.MYSQL_PASSWORD }}" \
          --set todoapp.secrets.SECRET_KEY="${{ secrets.APP_SECRET_KEY }}" \
          --set todoapp.secrets.DB_NAME="${{ secrets.APP_DB_NAME }}" \
          --set todoapp.secrets.DB_USER="${{ secrets.MYSQL_USER }}" \
          --set todoapp.secrets.DB_PASSWORD="${{ secrets.MYSQL_PASSWORD }}" \
          --set todoapp.secrets.DB_HOST="${{ secrets.APP_DB_HOST }}" \
          --set todoapp.image.tag=${{ github.sha }}

      - name: Deploy helm to Development
        run: |
          helm upgrade --install --wait --timeout 180s --debug ${{ inputs.helm-release-name }} ./todoapp-*.tgz \
          -f ${{ inputs.helm-values-path }} \
          --set mysql.secrets.MYSQL_ROOT_PASSWORD="${{ secrets.MYSQL_ROOT_PASSWORD }}" \
          --set mysql.secrets.MYSQL_USER="${{ secrets.MYSQL_USER }}" \
          --set mysql.secrets.MYSQL_PASSWORD="${{ secrets.MYSQL_PASSWORD }}" \
          --set todoapp.secrets.SECRET_KEY="${{ secrets.APP_SECRET_KEY }}" \
          --set todoapp.secrets.DB_NAME="${{ secrets.APP_DB_NAME }}" \
          --set todoapp.secrets.DB_USER="${{ secrets.MYSQL_USER }}" \
          --set todoapp.secrets.DB_PASSWORD="${{ secrets.MYSQL_PASSWORD }}" \
          --set todoapp.secrets.DB_HOST="${{ secrets.APP_DB_HOST }}" \
          --set todoapp.image.tag=${{ github.sha }}
