name: python-deployment

run-name: ${{ github.actor }} - ${{ github.event.inputs.os-type }} - ${{ github.event.inputs.python-version }}

on:
  workflow_dispatch:
    inputs:
      python-version:
        description: 'Python version to deploy (3.8 or 3.9)'
        required: true
        default: '3.8'
        type: choice
        options: [3.8, 3.9]
      os-type:
        description: 'OS type to deploy (ubuntu-latest or windows-latest)'
        required: true
        default: 'ubuntu-latest'
        type: choice
        options: [ubuntu-latest, windows-latest]

env:
  DockerImageName: ${{ secrets.DOCKERHUB_USERNAME }}/todoapp
  PythonVersion: ${{ github.event.inputs.python-version }}
  OsType: ${{ github.event.inputs.os-type }}

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  python-ci:
    runs-on: ${{ env.OsType }}
    name: Python CI (${{ env.PythonVersion }} on ${{ env.OsType }})
    defaults:
      run:
        working-directory: ./src
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python ${{ env.PythonVersion }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PythonVersion }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install coverage flake8
          pip install -r requirements.txt

      - name: Run tests
        run: python manage.py test

      - name: Generate coverage report
        run: |
          coverage run --source='.' manage.py test
          coverage report

      - name: Lint code
        run: flake8 . --show-source --statistics --exit-zero

      - name: Check code complexity
        run: flake8 . --exit-zero --max-complexity=6

      - name: Upload python artifacts
        uses: actions/upload-artifact@v4
        with:
          name: python-artifacts-${{ env.OsType }}-${{ env.PythonVersion }}
          path: .

      - name: Upload Helm charts
        uses: actions/upload-artifact@v4
        with:
          name: helm-artifacts-${{ env.OsType }}-${{ env.PythonVersion }}
          path: ${{ github.workspace }}/helm-charts

  deploy-selected:
    needs: python-ci
    runs-on: ubuntu-latest
    steps:
      - name: Download selected python artifact
        uses: actions/download-artifact@v4
        with:
          name: python-artifacts-${{ env.OsType }}-${{ env.PythonVersion }}

      - name: Show selected deployment
        run: |
          echo "Deploying Python ${{ env.PythonVersion }} on ${{ env.OsType }}"
          echo "Artifact: python-artifacts-${{ env.OsType }}-${{ env.PythonVersion }}"

  helm-ci:
    needs: deploy-selected
    runs-on: ubuntu-latest
    name: Helm CI
    steps:
      - name: Download Helm artifacts
        uses: actions/download-artifact@v4
        with:
          name: helm-artifacts-${{ env.OsType }}-${{ env.PythonVersion }}
          path: .

      - name: Set up Helm
        uses: azure/setup-helm@v4.3.0

      - name: Lint Helm chart
        run: helm lint ./todoapp/

      - name: Template Helm chart
        run: helm template todoapp ./todoapp/ -f ./todoapp/values.yaml

      - name: Package Helm chart
        run: helm package ./todoapp

      - name: Upload Helm package
        uses: actions/upload-artifact@v4
        with:
          path: ./*.tgz
          name: helm-package-${{ env.OsType }}-${{ env.PythonVersion }}

  docker-ci:
    name: Docker Build and Push
    runs-on: ubuntu-latest
    needs: [python-ci, deploy-selected]
    steps:
      - name: Download Python artifacts
        uses: actions/download-artifact@v4
        with:
          name: python-artifacts-${{ env.OsType }}-${{ env.PythonVersion }}
          path: .

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          push: true
          context: ./src
          tags: |
            ${{ env.DockerImageName }}:${{ github.sha }}
            ${{ env.DockerImageName }}:${{ env.OsType }}-${{ env.PythonVersion }}-${{ github.sha }}

  deploy-helm-dev:
    if: github.ref_name == 'main' || github.ref_name == 'test/develop'
    name: Deploy helm to Development
    uses: ./.github/workflows/reusable-deployment.yml
    needs: [helm-ci, docker-ci]
    secrets: inherit
    with:
      environment: development
      version: ${{ github.sha }}

  deploy-helm-stg:
    if: github.ref_name == 'main' || github.ref_name == 'test/develop'
    name: Deploy helm to Staging
    uses: ./.github/workflows/reusable-deployment.yml
    needs: [deploy-helm-dev]
    secrets: inherit
    with:
      environment: staging
      version: ${{ github.sha }}
      helm-values-path: ./todoapp/values/stg.yaml
      helm-release-name: todoapp-staging
